// <auto-generated/>
global using global::System;
public class Vector
{
    private int[] _mas;
    private int _length;
    public Vector(int length)
    {
        _length = length;
        _mas = new int[length];
    }
    public Vector(int[] mas)
    {
        int length = mas.Length;
        _length = mas.Length;
        _mas = new int[_length];
        for (int i = 0; i < _length; i++)
        {
            _mas[i] = mas[i];
        }
    }
    public int getLength()
    {
        return _length;
    }
    public void setMas(int i, int value)
    {
        _mas[i] = value;
    }
    public int getMas(int i)
    {
        return _mas[i];
    }
    public static Vector operator +(Vector left, Vector right)
    {
        int length = 0;
        Vector bigger = null;
        Vector smaller = null;
        if (left._length > right._length)
        {
            bigger = left;
            smaller = right;
            length = left._length;
        }
        else
        {
            bigger = right;
            smaller = left;
            length = right._length;
        }
        Vector newVector = new Vector(length);
        for (int i = 0; i < length; i++)
        {
            if (i < smaller._length)
            {
                newVector.setMas(i, bigger.getMas(i) + smaller.getMas(i));
            }
            else
            {
                newVector.setMas(i, bigger.getMas(i));
            }
        }
        return newVector;
    }
    //public static bool operator >(Vector left, Vector right)
    //{
    //    if (left._length > right._length)
    //    {
    //        return true;
    //    }
    //    else if (left._length < right._length)
    //    {
    //        return false;
    //    }
    //    else
    //    {
    //        for (int i = 0; i < left._length; i++)
    //        {
    //            if (left.getMas(i) > right.getMas(i))
    //            {
    //                return true;
    //            }
    //            else if (left.getMas(i) < right.getMas(i))
    //            {
    //                return false;
    //            }
    //        }
    //        return false;
    //    }
    //}
    //public static bool operator <(Vector left, Vector right)
    //{
    //    if (left._length < right._length)
    //    {
    //        return true;
    //    }
    //    else if (left._length > right._length)
    //    {
    //        return false;
    //    }
    //    else
    //    {
    //        for (int i = 0; i < left._length; i++)
    //        {
    //            if (left.getMas(i) < right.getMas(i))
    //            {
    //                return true;
    //            }
    //            else if (left.getMas(i) > right.getMas(i))
    //            {
    //                return false;
    //            }
    //        }
    //        return false;
    //    }
    //}
    //public static Vector operator ==(Vector left, Vector right)
    //{
    //    Vector newVector = new Vector(right._length);
    //    for (int i = 0; i < right._length; i++)
    //    {
    //        newVector.setMas(i, right.getMas(i));
    //    }
    //    left = newVector;
    //    return newVector;
    //}
    //public static Vector operator !=(Vector left, Vector right)
    //{
    //    Vector newVector = new Vector(right._length);
    //    for (int i = 0; i < right._length; i++)
    //    {
    //        newVector.setMas(i, right.getMas(i));
    //    }
    //    left = newVector;
    //    return newVector;
    //}
    //public override bool Equals(object o)
    //{
    //    Vector right = (Vector)o;
    //    if (ReferenceEquals(this, right))
    //    {
    //        return true;
    //    }
    //    else if(_length != right._length)
    //    {
    //        return false;
    //    }
    //    else
    //    {
    //        for (int i = 0; i < _length; i++)
    //        {
    //            if (_mas[i] != right.getMas(i))
    //            {
    //                return false;
    //            }
    //        }
    //        return true;
    //    }
    //}
    //public override int GetHashCode()
    //{
    //    int hash = 0;
    //    for (int i = 0; i < _length; i++)
    //    {
    //        hash += _mas[i];
    //    }
    //    hash /= _length;
    //    return hash;
    //}
    //public static bool operator true(Vector vector)
    //{
    //    if (vector._length == 0)
    //    {
    //        return false;
    //    }
    //    else
    //    {
    //        return true;
    //    }
    //}
    //public static bool operator false(Vector vector)
    //{
    //    if (vector._length == 0)
    //    {
    //        return true;
    //    }
    //    else
    //    {
    //        return false;
    //    }
    //}
    //public void WriteVector()
    //{
    //    if (_length == 0)
    //    {
    //        Console.WriteLine("vector is empty");
    //        return;
    //    }
    //    string str = "";
    //    for (int i = 0; i < _length; i++)
    //    {
    //        str += Convert.ToString(_mas[i]) + " ";
    //    }
    //    Console.WriteLine(str);
    //}
    //public virtual Vector DelPositive(Vector parm)
    //{
    //    return null;
    //}
    //public class Owner
    //{
    //    private int _id;
    //    private string _name;
    //    private string _org;
    //    public Owner(int id, string name, string org)
    //    {
    //        _id = id;
    //        _name = name;
    //        _org = org;
    //    }
    //    public void WriteOwner()
    //    {
    //        Console.WriteLine($"{_id} {_name} {_org}");
    //    }
    //}
    //public class Date
    //{
    //    private DateTime _date;
    //    public Date()
    //    {
    //        _date = DateTime.Now;
    //    }
    //    public void WriteDate()
    //    {
    //        Console.WriteLine(_date.ToString());
    //    }
    //}
}

//class Program
//{
//    static void Main()
//    {
//        int[] mas1 = { 1, 2, 3 };
//        Vector vector1 = new Vector(mas1);
//        vector1.WriteVector();
//        int[] mas2 = { -4, 5, -6 };
//        Vector vector2 = new Vector(mas2);
//        vector2.WriteVector();
//        Vector vector3 = vector1 == vector2;
//        vector3.WriteVector();
//        if (vector1.Equals(vector2))
//        {
//            Console.WriteLine("vector1 == vector2");
//        }
//        else
//        {
//            Console.WriteLine("vector1 != vector2");
//        }
//        Console.WriteLine(vector1.GetHashCode());
//        Vector vector4 = vector1 + vector2;
//        vector4.WriteVector();
//        if (vector1)
//        {
//            Console.WriteLine("vector1 isn't empty");
//        }
//        else
//        {
//            Console.WriteLine("vector1 is empty");
//        }
//        Vector.Owner owner = new Vector.Owner(987, "Oleg", "BSTU");
//        owner.WriteOwner();
//        Vector.Date date = new Vector.Date();
//        date.WriteDate();
//        Vector vector5 = vector2.DelPositive();
//        vector5.WriteVector();
//        string str = "qwertyuiop";
//        Console.WriteLine(str.StrCut(6));
//    }
//}